/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.WareHouse;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.IndustryEnterprise;
import Business.Enterprise.InventoryDirectory;
import Business.Enterprise.WareHouseEnterprise;
import Business.Enterprise.WareHouseInventory;
import Business.Network.Network;
import Business.Organization.ManufacturerOrganization;
import Business.Organization.Organization;
import Business.Organization.WareHouseOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.IndustryWorkRequest;
import Business.WorkQueue.WorkRequest;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jay
 */
public class AcceptIndustryRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AcceptIndustryRequestJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount account;
    private WareHouseOrganization wareHouseOrganization;
    private Enterprise enterprise;
    private EcoSystem business;

    AcceptIndustryRequestJPanel(JPanel userProcessContainer, UserAccount account, WareHouseOrganization wareHouseOrganization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.wareHouseOrganization = wareHouseOrganization;
        this.enterprise = enterprise;
        this.business = business;
        populateRequestTable();

    }

    public void populateRequestTable() {
        DefaultTableModel model = (DefaultTableModel) requestTable.getModel();

        model.setRowCount(0);
        for (WorkRequest industryReq : enterprise.getWorkQueue().getWorkRequestList()) {
            if (industryReq instanceof IndustryWorkRequest) {
                Object[] row = new Object[4];
                row[0] = ((IndustryWorkRequest) industryReq);
                row[1] = ((IndustryWorkRequest) industryReq).getIndquantity();
                row[2] = ((IndustryWorkRequest) industryReq).getOrderResult();

                model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        requestTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        acceptButton = new javax.swing.JButton();
        rejectButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();

        requestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Quantity", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(requestTable);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Accept Industry Request ");

        acceptButton.setText("Accept");
        acceptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptButtonActionPerformed(evt);
            }
        });

        rejectButton.setText("Reject");
        rejectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejectButtonActionPerformed(evt);
            }
        });

        backJButton.setText("<<Back");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(277, 277, 277)
                                .addComponent(acceptButton)
                                .addGap(18, 18, 18)
                                .addComponent(rejectButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(151, 151, 151)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 226, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(backJButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(63, 63, 63)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(acceptButton)
                    .addComponent(rejectButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                .addComponent(backJButton)
                .addGap(61, 61, 61))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void rejectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectButtonActionPerformed
        int selectedRow = requestTable.getSelectedRow();
        WorkRequest work = (WorkRequest) requestTable.getValueAt(selectedRow, 0);
        if(work instanceof IndustryWorkRequest)
        {
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please Select a row");
        } else if (((IndustryWorkRequest) work).getOrderResult().equals("Approved") || ((IndustryWorkRequest) work).getOrderResult().equals("Reject")) {
            JOptionPane.showMessageDialog(null, "This request is already assigned");
        } else {

            work.setReceiver(account);
            ((IndustryWorkRequest) work).setOrderResult("Reject");
            populateRequestTable();

        }
    }
// TODO add your handling code here:
    }//GEN-LAST:event_rejectButtonActionPerformed

    private void acceptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptButtonActionPerformed
        int selectedRow = requestTable.getSelectedRow();
        WorkRequest request = (WorkRequest) requestTable.getValueAt(selectedRow, 0);
int qq = 0;
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please Select a row");
        } else {
            if(request instanceof IndustryWorkRequest){
            request.setReceiver(account);
            ((IndustryWorkRequest) request).setOrderResult("Approved");
            populateRequestTable();
            
            
            WareHouseEnterprise a = (WareHouseEnterprise) enterprise;
                
                for(WareHouseInventory wi : a.getInventoryDirectory().getInventoryList())
                {
                    if(wi.getInventoryName().equals(((IndustryWorkRequest) request).getName()))
                    {
                            
                    qq = wi.getQuanitity() - ((IndustryWorkRequest) request).getIndquantity();
                    
                    wi.setQuanitity(qq);
                    
                System.out.println("ab"+ wi.getQuanitity());
                ((IndustryWorkRequest) request).setPrice(wi.getSellingPrice());
                    }
                }
                populateRequestTable();
                
            for (Network network : business.getNetworkList()) {
                for (Enterprise ent : network.getEnterpriseDirectory().getEnterpriseList()) {
                    if ((ent instanceof IndustryEnterprise)) {

                        ent.getWorkQueue().getWorkRequestList().add(request);
                        
                        

                    }

                }
            }
            } 
        }
            // TODO add your handling code here:
    }//GEN-LAST:event_acceptButtonActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton rejectButton;
    private javax.swing.JTable requestTable;
    // End of variables declaration//GEN-END:variables
}
